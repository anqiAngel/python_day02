import socket


# 定义形参时,可以为形参指定默认值
# 为形参指定了默认值以后,如果用户传递了参数则默认值没有任何作用 没传递则使用默认值
# def fn(a, b, c=20):
#     print('a =', a)
#     print('b =', b)
#     print('c =', c)
# fn(1, 2, )

# 实参的传递方式 2种
# 1.位置参数
# 位置参数就是将对应位置的实参复制给对应位置的形参
# 第一个实参赋值给第一个形参.....

# 2.关键字参数
# 关键字参数,可以不按照形参的定义的顺序去传递,而直接根据参数名去传递参数
# 调用函数时用形参的名字去给形参赋值

# 位置参数和关键字参数可以混合使用
# 混合使用关键字和位置参数时,必须将位置参数写到前面
# 不能同时为同一个形参赋值

# fn(a=1, b=2,)
# 函数在调用时,解析器不会检查实参的类型
# 实参可以传递任意类型的对象

def fn(a):
    a[0] = 30
    print('a =', a, id(a))


b = [1, 2, 3]
# 调用时要检查传递实参的类型
# 在函数中对形参进行重新赋值,不会影响其他的变量
# 如果形参指向的是一个对象,当我们通过形参去修改对象时

# 会影响到所有指向该对象的变量
# 如果不希望改变原对象则应该创建一个副本用copy()方法 对原对象进行浅复制

# fn(b)
fn(b.copy())
print('b =', b, id(b))
