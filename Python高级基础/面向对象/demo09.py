# 垃圾回收
# 就像我们生活中产生垃圾一样 程序运行也会产生垃圾
# 程序运行过程中产生的垃圾会影响到程序的运行性能,所以这些垃圾必须被及时清理
# 没用的东西就是垃圾
# 在程序中没有被引用的对象就是垃圾,这种垃圾对象过多以后会影响到程序的运行的性能,所以我们必须进行及时的垃圾回收
# 所谓垃圾回收就是将垃圾对象从内存中删除
# 在Python中有自动的垃圾回收机制,它会自动将这些没有被引用的对象删除,所以我们不用手动处理垃圾回收
# 程序运行结束后也会进行垃圾回收
class A:
    def __init__(self):
        self.name = 'A类'

    # del是一个特殊方法,它会在对象被垃圾回收前调用
    # 用来查看垃圾回收
    def __del__(self):
        print('A对象被删除了', self)


a = A()
# input('回车退出....')
# 使a指向空 A对象为垃圾
a = None
