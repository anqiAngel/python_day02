import socket

# 作用域(scope)与命名空间
# 作用域指的是变量生效的区域

b = 20


def fn():
    # 非要指定变量是全局变量使用global关键字修饰一下
    global b
    b = 10
    # a定义在了函数内部,所以他的作用域就是函数内部,函数外部无法访问
#   print('函数内部:', 'a =', a)
    print('函数内部:', 'b =', b)


fn()
print('函数外部:', 'b =', b)
# 在Python中有两种作用域
# 1.全局作用域  2.函数作用域
# 全局作用域在程序执行时创建,在程序执行结束时销毁
# 所有函数以外的区域都是全局作用域
# 在全局作用域中定义的变量,都属于全局变量,全局变量可以在程序的任意位置访问
# 函数作用域在函数调用时创建,在函数调用结束时销毁
# 函数每调用一次就会产生一个新的函数作用域

# 在函数作用域中定义的变量,只能在函数内部访问,都是局部变量
# 变量访问只能由内到外,不能由外到内访问
# 当我们使用一个变量时,我们会优先在当前作用域中寻找该变量,如果有则使用,如果没有继续去上一级的作用域寻找 没有再去上一级。 依此类推 最后没找到则会抛出异常
# 在函数中为变量赋值时,默认都是为局部变量赋值
# 如果需要修改全局变量,则需要使用global关键字,来声明变量
# global a 声明在函数内部使用的a是全局变量,此时再去修改a时,就是在修改全局变量

